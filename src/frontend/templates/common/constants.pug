-
  function parseDate(date,input,ajustHour){
    const months=date.getMonth()+1<10?"0"+(date.getMonth()+1):(date.getMonth()+1);
    const days=date.getDate()<10?"0"+date.getDate():date.getDate();
    const hours=(date.getHours()+1)<10?"0"+(date.getHours()+(ajustHour?1:0)):(date.getHours()+(+ajustHour?1:0));
    const minutes=date.getMinutes()<10?"0"+date.getMinutes():date.getMinutes();
    const seconds=date.getSeconds()<10?"0"+date.getSeconds():date.getSeconds();
      if(input) return date.getFullYear()+"-"+months+"-"+days;
    return days+"/"+months+"/"+date.getFullYear()+" "+hours+":"+minutes+":"+seconds;
  }
  Date.prototype.addHours = function(h) {
    this.setTime(this.getTime() + (h*60*60*1000));
    return this;
  }

  Date.prototype.differenceParsed = function (date) {
    let diffInMilliSeconds = Math.abs(this - date) / 1000;

    // calculate days
    const days = Math.floor(diffInMilliSeconds / 86400);
    diffInMilliSeconds -= days * 86400;

    // calculate hours
    const hours = Math.floor(diffInMilliSeconds / 3600) % 24;
    diffInMilliSeconds -= hours * 3600;

    // calculate minutes
    const minutes = Math.floor(diffInMilliSeconds / 60) % 60;
    diffInMilliSeconds -= minutes * 60;

    let difference = "";
    if (days > 0) difference += days === 1 ? `${days} d ` : `${days} d `;

    difference += hours === 0 || hours === 1 ? `${hours} h ` : `${hours} h `;

    difference += minutes === 0 || hours === 1 ? `${minutes} m` : `${minutes} m`;

    return difference;
  };
